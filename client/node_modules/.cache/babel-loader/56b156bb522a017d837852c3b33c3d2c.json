{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tippy.js'), require('react'), require('prop-types'), require('react-dom')) : typeof define === 'function' && define.amd ? define(['exports', 'tippy.js', 'react', 'prop-types', 'react-dom'], factory) : (global = global || self, factory(global.Tippy = {}, global.tippy, global.React, global.PropTypes, global.ReactDOM));\n})(this, function (exports, tippy, React, PropTypes, reactDom) {\n  'use strict';\n\n  var tippy__default = 'default' in tippy ? tippy['default'] : tippy;\n  var React__default = 'default' in React ? React['default'] : React;\n  PropTypes = PropTypes && PropTypes.hasOwnProperty('default') ? PropTypes['default'] : PropTypes;\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n  function preserveRef(ref, node) {\n    if (ref) {\n      if (typeof ref === 'function') {\n        ref(node);\n      }\n\n      if ({}.hasOwnProperty.call(ref, 'current')) {\n        ref.current = node;\n      }\n    }\n  }\n\n  function ssrSafeCreateDiv() {\n    return isBrowser && document.createElement('div');\n  }\n\n  function updateClassName(tooltip, action, classNames) {\n    classNames.split(/\\s+/).forEach(function (name) {\n      if (name) {\n        tooltip.classList[action](name);\n      }\n    });\n  }\n\n  var useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n\n  function useUpdateClassName(component, className, deps) {\n    useIsomorphicLayoutEffect(function () {\n      var tooltip = component.instance.popperChildren.tooltip;\n\n      if (className) {\n        updateClassName(tooltip, 'add', className);\n        return function () {\n          updateClassName(tooltip, 'remove', className);\n        };\n      }\n    }, [className].concat(deps));\n  }\n\n  function useInstance(initialValue) {\n    // Using refs instead of state as it's recommended to not store imperative\n    // values in state due to memory problems in React(?)\n    var ref = React.useRef();\n\n    if (!ref.current) {\n      ref.current = typeof initialValue === 'function' ? initialValue() : initialValue;\n    }\n\n    return ref.current;\n  }\n\n  function useSingletonCreate(component, props, enabled, deps) {\n    useIsomorphicLayoutEffect(function () {\n      var instances = component.instances;\n      var instance = tippy.createSingleton(instances, props);\n      component.instance = instance;\n\n      if (!enabled) {\n        instance.disable();\n      }\n\n      return function () {\n        instance.destroy();\n        component.instances = instances.filter(function (i) {\n          return !i.state.isDestroyed;\n        });\n      };\n    }, deps);\n  }\n\n  function useSingletonUpdate(component, props, enabled) {\n    useIsomorphicLayoutEffect(function () {\n      if (component.renders === 1) {\n        component.renders++;\n        return;\n      }\n\n      var instance = component.instance;\n      instance.setProps(props);\n\n      if (enabled) {\n        instance.enable();\n      } else {\n        instance.disable();\n      }\n    });\n  }\n\n  function Tippy(_ref) {\n    var children = _ref.children,\n        content = _ref.content,\n        className = _ref.className,\n        visible = _ref.visible,\n        singleton = _ref.singleton,\n        _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        _ref$multiple = _ref.multiple,\n        multiple = _ref$multiple === void 0 ? true : _ref$multiple,\n        _ref$ignoreAttributes = _ref.ignoreAttributes,\n        ignoreAttributes = _ref$ignoreAttributes === void 0 ? true : _ref$ignoreAttributes,\n        __source = _ref.__source,\n        __self = _ref.__self,\n        restOfNativeProps = _objectWithoutPropertiesLoose(_ref, [\"children\", \"content\", \"className\", \"visible\", \"singleton\", \"enabled\", \"multiple\", \"ignoreAttributes\", \"__source\", \"__self\"]);\n\n    var isControlledMode = visible !== undefined;\n    var isSingletonMode = singleton !== undefined;\n\n    var _useState = React.useState(false),\n        mounted = _useState[0],\n        setMounted = _useState[1];\n\n    var component = useInstance(function () {\n      return {\n        container: ssrSafeCreateDiv(),\n        renders: 1\n      };\n    });\n\n    var props = _extends({\n      ignoreAttributes: ignoreAttributes,\n      multiple: multiple\n    }, restOfNativeProps, {\n      content: component.container\n    });\n\n    if (isControlledMode) {\n      props.trigger = 'manual';\n    }\n\n    if (isSingletonMode) {\n      enabled = false;\n    }\n\n    var deps = [children.type]; // CREATE\n\n    useIsomorphicLayoutEffect(function () {\n      var instance = tippy__default(component.ref, props);\n      component.instance = instance;\n\n      if (!enabled) {\n        instance.disable();\n      }\n\n      if (visible) {\n        instance.show();\n      }\n\n      if (isSingletonMode) {\n        singleton(instance);\n      }\n\n      setMounted(true);\n      return function () {\n        instance.destroy();\n      };\n    }, deps); // UPDATE\n\n    useIsomorphicLayoutEffect(function () {\n      // Prevent this effect from running on 1st render\n      if (component.renders === 1) {\n        component.renders++;\n        return;\n      }\n\n      var instance = component.instance;\n      instance.setProps(props);\n\n      if (enabled) {\n        instance.enable();\n      } else {\n        instance.disable();\n      }\n\n      if (isControlledMode) {\n        if (visible) {\n          instance.show();\n        } else {\n          instance.hide();\n        }\n      }\n    });\n    useUpdateClassName(component, className, deps);\n    return React__default.createElement(React__default.Fragment, null, React.cloneElement(children, {\n      ref: function ref(node) {\n        component.ref = node;\n        preserveRef(children.ref, node);\n      }\n    }), mounted && reactDom.createPortal(content, component.container));\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    var ContentType = PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.element]);\n    Tippy.propTypes = {\n      content: PropTypes.oneOfType([ContentType, PropTypes.arrayOf(ContentType)]).isRequired,\n      children: PropTypes.element.isRequired,\n      visible: PropTypes.bool,\n      enabled: PropTypes.bool,\n      className: PropTypes.string,\n      singleton: PropTypes.func\n    };\n  }\n\n  var Tippy$1 = React.forwardRef(function TippyWrapper(_ref2, _ref3) {\n    var children = _ref2.children,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n    return React__default.createElement(Tippy, props, React.cloneElement(children, {\n      ref: function ref(node) {\n        preserveRef(_ref3, node);\n        preserveRef(children.ref, node);\n      }\n    }));\n  });\n\n  function TippySingleton(_ref) {\n    var children = _ref.children,\n        className = _ref.className,\n        _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        _ref$ignoreAttributes = _ref.ignoreAttributes,\n        ignoreAttributes = _ref$ignoreAttributes === void 0 ? true : _ref$ignoreAttributes,\n        restOfNativeProps = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\", \"enabled\", \"ignoreAttributes\"]);\n\n    var component = useInstance({\n      instances: [],\n      renders: 1\n    });\n\n    var props = _extends({\n      ignoreAttributes: ignoreAttributes\n    }, restOfNativeProps);\n\n    var deps = [children.length];\n    useSingletonCreate(component, props, enabled, deps);\n    useSingletonUpdate(component, props, enabled);\n    useUpdateClassName(component, className, deps);\n    return React.Children.map(children, function (child) {\n      return React.cloneElement(child, {\n        enabled: false,\n        onCreate: function onCreate(instance) {\n          if (child.props.onCreate) {\n            child.props.onCreate(instance);\n          }\n\n          component.instances.push(instance);\n        }\n      });\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    TippySingleton.propTypes = {\n      children: PropTypes.arrayOf(PropTypes.element).isRequired\n    };\n  }\n\n  function useSingleton(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        className = _ref.className,\n        _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        _ref$ignoreAttributes = _ref.ignoreAttributes,\n        ignoreAttributes = _ref$ignoreAttributes === void 0 ? true : _ref$ignoreAttributes,\n        restOfNativeProps = _objectWithoutPropertiesLoose(_ref, [\"className\", \"enabled\", \"ignoreAttributes\"]);\n\n    var component = useInstance({\n      instance: null,\n      instances: [],\n      renders: 1\n    });\n\n    var props = _extends({\n      ignoreAttributes: ignoreAttributes\n    }, restOfNativeProps);\n\n    var deps = [component.instances.length];\n    useSingletonCreate(component, props, enabled, deps);\n    useSingletonUpdate(component, props, enabled);\n    useUpdateClassName(component, className, deps);\n    return function (instance) {\n      component.instances.push(instance);\n    };\n  }\n\n  exports.tippy = tippy__default;\n  exports.TippySingleton = TippySingleton;\n  exports.default = Tippy$1;\n  exports.useSingleton = useSingleton;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":null,"metadata":{},"sourceType":"script"}